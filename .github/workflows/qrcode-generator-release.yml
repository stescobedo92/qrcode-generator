name: Create Release

on:
  push:
    branches: [ "master" ] # Define the branch on which you want the action to be triggered, for example, 'main'.

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      - name: Install toolchain
        run: rustup default stable

      - name: Build application
        run: cargo build --release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.API_CONNECTION_GIT }}  # Necessary to authenticate with GitHub API.
        with:
          tag_name: v1.0.0  # Define the tag name of the release
          release_name: bncfqr v1.0.0  # Release Name
          body: |  # Relase body
          draft: false  # Publish the release immediately.
          prerelease: false  # Define whether the release is a pre-release version or not.

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          CARGO_GITHUB_TOKEN: ${{ secrets.CARGO_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # Upload URL of the release
          asset_path: ./target/release/bncfqr  # Path to the application executable
          asset_name: bncfqr  # Name of the file in the release
          asset_content_type: application/octet-stream